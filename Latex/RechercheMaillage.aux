\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Project description and aim}{2}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}The template class T3 and the class Triangle}{2}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}The template class T3}{2}{subsection.2.1}}
\newlabel{T3}{{2.1}{2}{The template class T3}{subsection.2.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}The class Triangle}{2}{subsection.2.2}}
\newlabel{triangle}{{2.2}{2}{The class Triangle}{subsection.2.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}The class Mesh}{2}{section.3}}
\newlabel{mesh}{{3}{2}{The class Mesh}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}LoadVertices and LoadTriangles}{3}{subsection.3.1}}
\newlabel{Load}{{3.1}{3}{LoadVertices and LoadTriangles}{subsection.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Find the adjacent triangle}{3}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}setAdjacencyViaMultimap}{3}{subsubsection.3.2.1}}
\newlabel{multimap}{{3.2.1}{3}{setAdjacencyViaMultimap}{subsubsection.3.2.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The initial situation for determining the neighbors (left). The element$ ((i_k,i_l),i) $ is erased from the map in the iterator points to another element, not necessarily $((i_k,i_l),j)$. This essentially depends on the internal ordering of the multimap. }}{4}{figure.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.2}setAdjacencyViaList}{4}{subsubsection.3.2.2}}
\newlabel{list}{{3.2.2}{4}{setAdjacencyViaList}{subsubsection.3.2.2}{}}
\newlabel{list_ill}{{3.2.2}{4}{setAdjacencyViaList}{figure.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Illustration of the list structure}}{4}{figure.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.3}Vergleich}{5}{subsubsection.3.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}L'algorithme promenade}{5}{subsection.3.3}}
\newlabel{promenade}{{3.3}{5}{L'algorithme promenade}{subsection.3.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.1}Random neighbor selection}{6}{subsubsection.3.3.1}}
\newlabel{ran_neighb_sel}{{3.3.1}{6}{Random neighbor selection}{subsubsection.3.3.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.2}Selection of neighbor with minimal oriented volume}{6}{subsubsection.3.3.2}}
\newlabel{min_neg_vol}{{3.3.2}{6}{Selection of neighbor with minimal oriented volume}{subsubsection.3.3.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.3}Can an arbitrary choice of the consecutive triangle be a better choice?}{6}{subsubsection.3.3.3}}
\newlabel{Question}{{3.3.3}{6}{Can an arbitrary choice of the consecutive triangle be a better choice?}{subsubsection.3.3.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.4}Empirical demonstration that the deterministic choice of the consecutive triangle is better in regular meshs}{7}{subsubsection.3.3.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}The visualization via gnuplot}{7}{subsection.3.4}}
\newlabel{visualization}{{3.4}{7}{The visualization via gnuplot}{subsection.3.4}{}}
\newlabel{Example}{{3.3.3}{8}{Can an arbitrary choice of the consecutive triangle be a better choice?}{subsubsection.3.3.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The illustration of \ref  {Question}.}}{8}{figure.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Cover vertices of a mesh by another mesh}{8}{section.4}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Test environment- the main function}{9}{section.5}}
\newlabel{30}{{3.3.4}{10}{Empirical demonstration that the deterministic choice of the consecutive triangle is better in regular meshs}{subsubsection.3.3.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces The pathlength and the runtime compared using $ min_neg $ and $ random_neg $. In this example, $ 30 $ data points were randomly created in the file 'TimeMeasurements.cpp'. The underlying mesh is 'maillage5.msh'.}}{10}{figure.4}}
\newlabel{2000}{{3.3.4}{11}{Empirical demonstration that the deterministic choice of the consecutive triangle is better in regular meshs}{figure.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Here, $ 2000 $ data points were randomly created.}}{11}{figure.5}}
